{"version":3,"sources":["components/common/Common.js","components/post/Post.js","components/feed/Feed.js","components/rightbar/Rightbar.js","components/sidebar/FriendsList.js","components/sidebar/Sidebar.js","components/topbar/Topbar.js","pages/home/Home.js","pages/login/Login.js","pages/profile/Profile.js","App.js","index.js"],"names":["Common","posts","addToPosts","userStatusStr","localStorage","getItem","useState","postText","setPostText","userStatus","setUserStatus","tempUserStatus","setTempUserStatus","usersArr","setUsers","useEffect","getUsers","a","fetchUsers","serverUsers","fetch","res","json","data","className","src","alt","placeholder","company","catchPhrase","type","value","onChange","e","target","onClick","setItem","Photo","htmlColor","id","IconButton","postToBeAdded","body","modified","Publish","Backspace","Post","props","userId","More","ThumbUp","ThumbDown","Feed","setPosts","getPosts","fetchPosts","serverPosts","currUser","console","log","currUserServerPosts","filter","post","parseInt","friends","length","currFriendsId","temp","split","map","push","apply","includes","friendsIDArr","f","modifiedPostsArr","Rightbar","onlineFriendsList","setOnlineFriendsList","serverOnlineFriendsList","fetchOnlineFriends","name","FriendsList","element","username","deleteFriendFromList","DeleteForever","style","fill","Sidebar","history","useHistory","followFriendInputTemp","setFollowFriendInputTemp","newFriend","setNewFriend","routeChange","RssFeed","Person","addFriendToList","Topbar","clear","updateCurrUser","Search","Chat","Notifications","Home","tempArrForInitialState","Array","friendsArr","setFriends","getFriends","fetchFriends","serverFriends","updatedFriends","n","friendsIdList","friend","currentTarget","temp2","Math","random","tempFriendList","restoreFriends","idArr","idObjArr","email","address","phone","website","Login","UsersCredentials","setUsersCredentials","setIsLoggedIn","getUsersCredentials","fetchUsersCrendentials","serverUsersCredentials","userMail","setUserMail","userPassword","setUserPassword","userCredentialsEmail","userCredentialsPassword","userObj","street","currUserID","i","window","alert","newUserCredential","newUserCredentials","newUserId","Profile","userInputEmail","setUserInputEmail","userInputNumber","setUserInputNumber","userInputZip","setUserInputZip","userInputPassword","setUserInputPassword","userInputConfirmPassword","setUserInputConfirmPassword","statusMsg","setStatusMsg","currentValue","setCurrentValue","text","class","href","String","errorString","fieldsChangedStr","validated","match","updated_input","App","currUserFromLocalStore","setCurrUser","userID","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c201e764.chunk.js","sourcesContent":["import React from 'react'\nimport \"./common.css\"\nimport { Photo } from \"@material-ui/icons\"\nimport { Backspace } from '@material-ui/icons'\nimport { Publish } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core'\nimport { useState, useEffect } from \"react\"\n\n\nconst Common = ({posts, addToPosts}) => {\n    let userStatusStr = \"\";\n    if (localStorage.getItem(\"userStatus\")){\n        userStatusStr = localStorage.getItem(\"userStatus\");\n    }\n\n    const [postText, setPostText] = useState([\"\"])\n    const [userStatus, setUserStatus] = useState(userStatusStr)\n    const [tempUserStatus, setTempUserStatus] = useState(\"\")\n\n    const handleUserInput = (e) => {\n        setPostText(e.target.value)\n    }\n\n    const clearUserInput = () => {\n        setPostText(\"\")\n    }\n\n    const [usersArr, setUsers] = useState([])\n\n    // Fetch users from dummy server\n    useEffect(() => {\n        const getUsers = async () => {\n            const serverUsers = await fetchUsers()\n            setUsers(serverUsers)\n        }\n        getUsers()\n    }, [])\n    const fetchUsers = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n\n    const updateUserStatusInput = (e) => {\n        setTempUserStatus(e.target.value)\n    }\n    const updateStatusFromInput = (e) => {\n        setUserStatus(tempUserStatus)\n        localStorage.setItem(\"userStatus\", tempUserStatus)\n        setTempUserStatus(\"\")\n    }\n    const collectInput = () => {\n        let postToBeAdded = {\n            // userId: 1  ,\n            id: 110   ,\n            // title: '1'   ,\n            body: postText\n        }\n        let modified = posts\n        addToPosts([...modified, postToBeAdded])\n        setPostText(\"\")\n    }\n\n    return (\n        <div className=\"common\">\n            <div className=\"commonWrapper\">\n                <div className=\"commonTop\">\n                    <img className=\"commonProfilePicture\" src=\"/assets/profile_pic_1.jpg\" alt=\"\" />\n                    <input placeholder={usersArr[0] && usersArr !== []? usersArr[0].company.catchPhrase : \"hi\"} type=\"text\" value={tempUserStatus} className=\"commonInput\" onChange={updateUserStatusInput}/>\n                    <span className=\"commonUserStatus\">{userStatus}</span>\n                    <input className=\"statusUpdateBtn\" type=\"button\" value=\"Update Status\" onClick={updateStatusFromInput} />\n                </div>\n                <hr className=\"commonHr\"/>\n                <div className=\"commonBottom\">\n                    <div className=\"commonOptions\">\n                        <Photo htmlColor=\"#26a7de\" className=\"commonIcon\"/>\n                        <span className=\"commonOptionText\">Add Photo?</span>\n                        <input className=\"commonAddImage\" type=\"file\"/>\n                    </div>\n\n                </div>\n\n                <div className=\"commonNewPost\">\n                    <div className=\"commonNewText\">\n                            <textarea className=\"commonNewTextInput\" type=\"text\" id=\"userTextInput\" value={postText} onChange={handleUserInput}/>\n                            <div className=\"commonPostButtons\">\n                                <IconButton onClick={collectInput}>\n                                    <Publish className=\"commonNewTextSubmitButton\"/>\n                                </IconButton>\n                                <span className=\"commonNewTextSubmitButtonDesc\">Post</span>\n                                <IconButton onClick={clearUserInput}>\n                                    <Backspace className=\"commonNewTextDeleteButton\" />\n                                </IconButton>\n                                <span className=\"commonNewTextDeleteButtonDesc\">Clear</span>\n                                {/* <button type=\"submit\" className=\"commonNewTextSubmitButton\">Submit</button> */}\n                                {/* <button type=\"button\" className=\"commonNewTextDeleteButton\" >Clear</button> */}\n                            </div>\n                            \n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Common\n","import React from 'react'\nimport \"./post.css\"\nimport { More } from \"@material-ui/icons\"\nimport { ThumbUp } from \"@material-ui/icons\"\nimport { ThumbDown } from \"@material-ui/icons\"\nimport { IconButton } from '@material-ui/core'\n\n\nexport default function Post(props) {\n    // console.log(props)\n    return (\n        <div className=\"post\">\n            <div className=\"postWrapper\">\n                <div className=\"postTop\">\n                    <div className=\"postTopLeft\">\n                        <img src=\"/assets/profile_pic_1.jpg\" className=\"postProfilePic\" alt=\"\"/>\n                        <span className=\"postUsername\">user{props.posts.userId}</span>\n                        <span className=\"postTime\">x mins ago</span>\n                    </div>\n                    <div className=\"postTopRight\"></div>\n                    <IconButton>\n                        <More className=\"postMoreOptions\"/>\n                    </IconButton>\n                </div>\n                \n                <div className=\"postCenter\">\n                    <span className=\"postText\">{props.posts? props.posts.body: \"\"}</span>\n                    <img className=\"postImg\" src=\"assets/post_img_1.jpg\" alt=\"\"/>\n                </div>\n\n                <div className=\"postBottom\">\n                    <div className=\"postBottomLeft\">\n                        <ThumbUp className=\"reactionIcon\" htmlColor=\"blue\"/>\n                        <ThumbDown className=\"reactionIcon\" htmlColor=\"red\"/>\n                        <span className=\"thumbUpCounter\">XXX says: It's cool!</span>\n                    </div>\n                    <div className=\"postBottomRight\">\n                        <span className=\"postCommentText\">z comments</span>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Common from '../common/Common'\nimport Post from '../post/Post'\nimport \"./feed.css\"\nimport { useState, useEffect } from 'react'\n\n\nconst Feed = (props) => {\n    const [posts, setPosts] = useState([]) \n    // Fetch posts from dummy server\n    useEffect(() => {\n        const getPosts = async () => {\n            const serverPosts = await fetchPosts()\n            // This is new user that just registers\n            if(props.currUser > 9){\n                console.log(\"I'm at Feed.js getting posts for new user!\")\n                localStorage.setItem(\"currUser\", props.currUser)\n                const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) === 1))\n                setPosts(currUserServerPosts)\n            }\n            else{\n                console.log(`I'm at Feed.js getting posts for old user ${props.currUser}!`)\n\n                // I refresh the page\n                if(props.friends.length === 20){\n                    console.log(\"I refresh the page\")\n                    let currFriendsId = []\n                    if(localStorage.getItem(\"friends\")){\n                        let temp = localStorage.getItem(\"friends\").split(',')\n                        console.log(temp)\n                        temp = temp.map((e)=>(parseInt(e)))\n                        currFriendsId.push.apply(currFriendsId, temp)\n                    }\n                    // TODO: Correctly set props.friends(currently it becomes empty after refresh)\n                    console.log(props.friends)\n                    const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) !== props.currUser && currFriendsId.includes(parseInt(post.userId))))\n                    setPosts(currUserServerPosts)                   \n                }\n                else{\n                    console.log(\"yi\")\n                    console.log(props.friends)\n                    let friendsIDArr = props.friends.map((f) => (f.id))\n                    console.log(friendsIDArr)\n                    const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) !== props.currUser && friendsIDArr.includes(parseInt(post.userId))))\n                    setPosts(currUserServerPosts)        \n                }\n            }\n        }\n        getPosts()\n    },[props.friends])\n    const fetchPosts = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        const data = await res.json()\n        return data\n    }\n    \n    const addToPosts = (modifiedPostsArr) => {\n        setPosts(modifiedPostsArr)\n    }\n\n    return (\n        <div className=\"feed\">\n            <div data-testid=\"test-feed-id\" className=\"feedWrapper\">\n                <Common posts={posts} addToPosts={addToPosts}/>\n                {posts.map( (post) => (\n                   <Post key={post.id} posts={post}/> \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Feed\n","import React from 'react'\nimport \"./rightbar.css\"\nimport { useState, useEffect } from 'react'\n\nconst Rightbar = () => {\n\n    const [onlineFriendsList, setOnlineFriendsList] = useState([\"\", \"\", \"\", \"\", \"\"])\n\n    // Fetch friends list\n    useEffect(() => {\n        const serverOnlineFriendsList = async () => {\n            const serverOnlineFriendsList = await fetchOnlineFriends()\n            setOnlineFriendsList(serverOnlineFriendsList)\n        }\n        serverOnlineFriendsList()\n    })\n    const fetchOnlineFriends = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n    \n\n    return (\n        <div className=\"rightbar\">\n            <div className=\"rightbarWrapper\">\n                <h4 className=\"onlineFriends\">Who's online</h4>\n                <hr/>\n                <ul className=\"rightbarFriendList\">\n                    <li className=\"rightbarFriend\">\n                        <div className=\"rightBarProfileImgContainer\">\n                            <img className=\"rightbarProfileImg\" src=\"assets/profile_pic_3.jpg\" alt=\"\"/>\n                            <span className=\"rightbarOnline\"></span>\n                        </div>\n                        <span className=\"rightbarUsername\" >{onlineFriendsList !== []? onlineFriendsList[0].name : \"\"}</span>\n                    </li>\n\n                    <li className=\"rightbarFriend\">\n                        <div className=\"rightBarProfileImgContainer\">\n                            <img className=\"rightbarProfileImg\" src=\"assets/profile_pic_3.jpg\" alt=\"\"/>\n                            <span className=\"rightbarOnline\"></span>\n                        </div>\n                        <span className=\"rightbarUsername\" >{onlineFriendsList !== []? onlineFriendsList[1].name: \"\"}</span>\n                    </li>\n                    <li className=\"rightbarFriend\">\n                        <div className=\"rightBarProfileImgContainer\">\n                            <img className=\"rightbarProfileImg\" src=\"assets/profile_pic_3.jpg\" alt=\"\"/>\n                            <span className=\"rightbarOnline\"></span>\n                        </div>\n                        <span className=\"rightbarUsername\" >{onlineFriendsList !== []? onlineFriendsList[2].name: \"\"}</span>\n                    </li>\n                    <li className=\"rightbarFriend\">\n                        <div className=\"rightBarProfileImgContainer\">\n                            <img className=\"rightbarProfileImg\" src=\"assets/profile_pic_3.jpg\" alt=\"\"/>\n                            <span className=\"rightbarOnline\"></span>\n                        </div>\n                        <span className=\"rightbarUsername\" >{onlineFriendsList !== []? onlineFriendsList[3].name: \"\"}</span>\n                    </li>\n                    <li className=\"rightbarFriend\">\n                        <div className=\"rightBarProfileImgContainer\">\n                            <img className=\"rightbarProfileImg\" src=\"assets/profile_pic_3.jpg\" alt=\"\"/>\n                            <span className=\"rightbarOnline\"></span>\n                        </div>\n                        <span className=\"rightbarUsername\" >{onlineFriendsList !== []? onlineFriendsList[4].name: \"\"}</span>\n                    </li>\n\n                </ul>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Rightbar\n","import React from 'react'\nimport { DeleteForever } from '@material-ui/icons';\n\nimport { IconButton } from '@material-ui/core';\nimport \"./sidebar.css\"\nimport { useEffect, useState } from 'react'\n\n\nconst FriendsList = (props) => {\n    \n    return (\n            <ul className=\"sidebarFriendList\">   \n                {props.friends.map(element => (\n                    <li className=\"sidebarFriend\" key={element.id}>\n                        <img className=\"sidebarFriendImg\" src=\"/assets/profile_pic_2.jpg\" alt=\"\"/>\n                        <span className=\"sidebarFriendName\">{element.username}</span>\n                        <IconButton className=\"sidebarFollowListUnfollow\" id=\"test-delete-btn\" onClick={props.deleteFriendFromList} name={element.id}>\n                            <DeleteForever style={{fill: \"red\"}}/>\n                        </IconButton>\n                    </li>))}     \n            </ul>\n        )\n}\n\nexport default FriendsList\n\n","import React from 'react'\nimport \"./sidebar.css\"\nimport { RssFeed } from \"@material-ui/icons\"\nimport { Person } from \"@material-ui/icons\"\n// import { useEffect, useState } from 'react'\nimport FriendsList from './FriendsList'\nimport { useHistory } from \"react-router-dom\"\nimport { AddBox } from '@material-ui/icons';\nimport { useState } from 'react'\n\nconst Sidebar = (props) => {\n\n    const history = useHistory();\n    const [followFriendInputTemp, setFollowFriendInputTemp] = useState(\"\")\n    const [newFriend, setNewFriend] = useState(\"\")\n\n    const routeChange = (e) => {\n        if (e.target.id === \"link1\"){\n            let path = \"/home\";\n            history.push(path);\n        }\n        else if (e.target.id === \"link2\"){\n            let path = \"/profile\";\n            history.push(path);\n        }\n    }\n\n    const updateInput = (e) => {\n        setFollowFriendInputTemp(e.target.value)\n        console.log(followFriendInputTemp)\n    }\n\n    const addFriendToList = () => {\n        setNewFriend(followFriendInputTemp)\n        console.log(newFriend)\n        props.addFriendToList(newFriend)\n    }\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebarWrapper\">\n                <ul className=\"sidebarList\">\n                    <li className=\"sidebarListItem\" >\n                        <RssFeed className=\"sidebarIcon\"/>\n                        <span id=\"link1\" className=\"sidebarListItemText\" onClick={routeChange}>Feed</span>\n                    </li>\n                    <li className=\"sidebarListItem\">\n                        <Person className=\"sidebarIcon\"/>\n                        <span id=\"link2\" className=\"sidebarListItemText\" onClick={routeChange}>Profile</span>\n                    </li>\n                </ul>\n                <hr className=\"sidebarHr\"/>\n                <input className=\"addFriendInput\" onChange={updateInput}/>\n                <button className=\"addFriendBtn\" onClick={addFriendToList}>Add</button>\n                <FriendsList friends={props.friends} deleteFriendFromList={props.deleteFriendFromList}/>      \n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport \"./topbar.css\"\nimport { Search } from \"@material-ui/icons\"\nimport { Person } from \"@material-ui/icons\"\nimport { Chat } from \"@material-ui/icons\"\nimport { Notifications } from \"@material-ui/icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useEffect } from 'react'\n\nconst Topbar = (props) => {\n\n    const history = useHistory();\n\n    const routeChange = (e) => {\n        if (e.target.id === \"link1\"){\n            let path = \"/profile\";\n            history.push(path);\n        }\n        else if (e.target.id === \"link2\"){\n            let path = \"/home\";\n            history.push(path);\n        }\n        else if (e.target.id === \"link3\"){\n            localStorage.clear()\n            props.updateCurrUser()\n            let path = \"/\";\n            history.push(path)\n        }\n    }\n\n    return (\n        <div className=\"topbarContainer\">\n            <div className=\"topbarLeft\">\n                <span className=\"logo\">Social appie</span>\n            </div>\n            <div className=\"topbarCenter\">\n                <div className=\"searchbar\">\n                    <Search className=\"searchIcon\"/>\n                    <input className=\"searchInput\" placeholder=\"Search...\"/>\n                </div>\n            </div>\n            <div className=\"topbarRight\">\n                <div className=\"topbarLinks\">\n                    <span id=\"link1\"className=\"topbarLink\" onClick={(e) => routeChange(e)}>Profile</span>\n                    <span id=\"link2\" className=\"topbarLink\" onClick={(e) => routeChange(e)}>Timeline</span>\n                    <span id=\"link3\" className=\"topbarLink\" onClick={(e) => routeChange(e)}>Logout</span>\n                </div>\n                <div className=\"topbarIcons\">\n                    <div className=\"topbarIconItem\">\n                        <Person className=\"personIcon\"/>\n                        <span className=\"topbarIconBadge\">1</span>\n                    </div>\n                    <div className=\"topbarIconItem\">\n                        <Chat className=\"chatIcon\"/>\n                        <span className=\"topbarIconBadge\">2</span>\n                    </div>\n                    <div className=\"topbarIconItem\">\n                        <Notifications />\n                        <span className=\"topbarIconBadge\">1</span>\n                    </div>\n                </div>\n                <img src=\"/assets/profile_pic_1.jpg\" alt=\"\" className=\"topbarImg\"/>\n            </div>\n        </div>\n    )\n}\nexport default Topbar\n","import React from 'react'\nimport \"./home.css\"\nimport Feed from '../../components/feed/Feed'\nimport Rightbar from '../../components/rightbar/Rightbar'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Topbar from '../../components/topbar/Topbar'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\n\nconst Home = (props) => {\n\n    const tempArrForInitialState = new Array(20)\n    const [friendsArr, setFriends] = useState(tempArrForInitialState)\n    // Fetch users from dummy server\n    useEffect(() => {\n        const getFriends = async () => {\n            let serverFriends = await fetchFriends()\n            if(localStorage.getItem(\"friends\")){\n                console.log(localStorage)\n                let updatedFriends = localStorage.getItem(\"friends\").split(',')\n                updatedFriends = updatedFriends.map((n)=>(parseInt(n)))\n                console.log(updatedFriends)\n                serverFriends = serverFriends.filter(f => updatedFriends.includes(f.id))\n            }\n            \n            localStorage.setItem(\"allFriends\", serverFriends)\n            setFriends(serverFriends)\n            let friendsIdList = serverFriends.map((f)=>(f.id))\n            console.log(friendsIdList)\n            localStorage.setItem(\"friends\", friendsIdList)\n            console.log(localStorage)\n        }\n        getFriends()\n    }, [])\n    const fetchFriends = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n\n    const deleteFriendFromList = (e) => {\n        let temp = friendsArr.filter( (friend) => friend.id != e.currentTarget.name)\n        console.log(`I'm at Home.js deleting friend ${e.currentTarget.name}!`)\n        \n        // Update friends at localStorage\n        let temp2 = friendsArr.map((friend)=>(friend.id))\n        temp2 = temp2.filter((f) => f != e.currentTarget.name)\n        localStorage.setItem(\"friends\", temp2)\n        setFriends(temp)\n        console.log(friendsArr)\n    }\n\n    const addFriendToList = (f) => {\n        let newFriend = {id: Math.random()*1000+1, name: f, username: f}\n        let tempFriendList = [...friendsArr, newFriend]\n        console.log(tempFriendList)\n        setFriends(tempFriendList)\n    }\n\n    const restoreFriends = (idArr) => {\n        let idObjArr = idArr.map((id) => ({id: id, name: \"\", username: \"\", email:\"\", address: {}, phone:\"\", website:\"\", company:{}}))\n        console.log(idObjArr)\n        setFriends(idObjArr)    // This line is not working!!\n        console.log(friendsArr)\n    }\n\n    return (\n        <>\n            <Topbar currUser={props.currUser} updateCurrUser={props.updateCurrUser}/>\n            <div className=\"homeContainer\">\n                <Sidebar currUser={props.currUser} friends={friendsArr} deleteFriendFromList={deleteFriendFromList} addFriendToList={addFriendToList}/>\n                <Feed currUser={props.currUser} friends={friendsArr} restoreFriends={restoreFriends}/>\n                <Rightbar currUser={props.currUser}/>\n            </div>\n        </>\n    )\n}\nexport default Home\n","import \"./login.css\"\nimport { useState, useEffect } from \"react\"\nimport React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\n\nconst Login = (props) => {\n    const [UsersCredentials, setUsersCredentials] = useState([])\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    // Fetch users email and password from dummy server\n    useEffect(() => {\n        const getUsersCredentials = async () => {\n            const serverUsersCredentials = await fetchUsersCrendentials()\n            setUsersCredentials(serverUsersCredentials)\n            // console.log(UsersCredentials)\n        }\n        getUsersCredentials()\n    }, [])\n    const fetchUsersCrendentials = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n\n\n    const history = useHistory()\n    const [userMail, setUserMail] = useState([])\n    const [userPassword, setUserPassword] = useState([])\n    \n    const handleUserMailInput = (e) => {\n        setUserMail(e.target.value)\n    }\n    const handleUserPasswordInput = (e) => {\n        setUserPassword(e.target.value)\n    }\n    const loginChecker = () => {\n        // Perform check on user's input email & password\n        let userCredentialsEmail = [];\n        let userCredentialsPassword = [];\n        userCredentialsEmail = UsersCredentials.map( userObj => userObj.email );\n        userCredentialsPassword = UsersCredentials.map( userObj => userObj.address.street);\n        if (userCredentialsEmail.includes(userMail)){\n            if(userCredentialsPassword.includes(userPassword)){\n                // Success then:\n                // 1. Set currUser global state passed from App.js -> currUser will be set with his/her userID\n                let currUserID = 0;\n                for(var i = 0; i < UsersCredentials.length; i++){\n                    if(UsersCredentials[i].email == userMail){\n                        currUserID = UsersCredentials[i].id;\n                    }\n                }\n                props.updateCurrUser(currUserID)\n                console.log(`user ${currUserID} logged in`)\n                localStorage.setItem(\"currUser\", currUserID)\n                console.log(localStorage)\n                setIsLoggedIn(true)\n                // 2. route to homepage\n                let path = \"/home\";\n                history.push(path);\n            }\n            else{\n                window.alert(\"wrong password!\")\n                setUserPassword(\"\")\n            }\n        }\n        else{\n            window.alert(\"wrong username or password!\")\n            setUserMail(\"\")\n            setUserPassword(\"\")\n        }\n    }\n\n    const registerHandler = () => {\n        // Update my UsersCredentials state\n        let newUserCredential = {\n            \"email\": userMail,\n            \"password\": userPassword\n        }\n        let newUserCredentials = [...UsersCredentials, newUserCredential];\n        setUsersCredentials(newUserCredentials);\n\n        // Set current user so we can later choose which posts to display for this user\n        let newUserId = UsersCredentials.length;\n        props.updateCurrUser(newUserId);\n\n        // Route to homepage after registration\n        let path = \"/home\";\n        history.push(path);\n    }\n    \n    return (\n        <div className=\"login\">\n            <div className=\"loginWrapper\">\n                <div className=\"loginLeft\">\n                    <h3 className=\"loginLogo\">Social Appie</h3>\n                    <span className=\"loginDesc\">Please sign in or sign up.</span>\n                </div>\n                    \n                <div className=\"loginRight\"></div>\n                    <div className=\"loginBox\">\n                        <input id=\"input1\" type=\"email\" name='emailInput' value={userMail} onChange={handleUserMailInput} placeholder=\"Email address\" className=\"loginInput\"/>\n                        <input id=\"input2\" type=\"Password\" name='pwdInput' value={userPassword} onChange={handleUserPasswordInput} placeholder=\"Password\" className=\"loginInput\"/>\n                        <button data-testid=\"testBtn1\" id=\"loginBtn\" className=\"loginBtn\" onClick={loginChecker}>Log in</button>\n                        <button id='registerBtn' className=\"loginRegisterBtn\" onClick={registerHandler}>Sign up?</button>\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n// export const validateLogin","import React from 'react'\n// import Feed from '../../components/feed/Feed'\n// import Rightbar from '../../components/rightbar/Rightbar'\n// import Sidebar from '../../components/sidebar/Sidebar'\nimport Topbar from '../../components/topbar/Topbar'\nimport \"./profile.css\"\nimport { useState } from \"react\"\nimport { PhotoCamera } from '@material-ui/icons'\n\n\nconst Profile = (props) => {\n\n    const [userInputEmail, setUserInputEmail] = useState(\"\")\n    const [userInputNumber, setUserInputNumber] = useState(\"\")\n    const [userInputZip, setUserInputZip] = useState(\"\")\n    const [userInputPassword, setUserInputPassword] = useState(\"\")\n    const [userInputConfirmPassword, setUserInputConfirmPassword] = useState(\"\")\n    const [statusMsg, setStatusMsg] = useState(\"\")\n    const [currentValue, setCurrentValue] = useState([\"ms100@rice.edu\", \"123-789-456\", \"55688\", \"******\", \"******\"])\n\n    const inputEmailHandler = (e) => {    \n        setUserInputEmail(e.target.value)\n        \n    }\n\n    const inputNumberHandler = (e) => {\n        setUserInputNumber(String(e.target.value))\n    }\n\n    const inputZipHandler = (e) => {\n        setUserInputZip(String(e.target.value))\n    }\n\n    const inputPasswordHandler = (e) => {\n        setUserInputPassword(String(e.target.value))\n    }\n\n    const inputPasswordConfirmHandler = (e) => {\n        setUserInputConfirmPassword(String(e.target.value))\n    }\n\n    const inputChecker = (e) => {\n        // Validate the input and update the fields if success\n        let errorString = \"\";\n        let fieldsChangedStr = \"\";\n        let password_checked = false;\n        let validated = true;\n        if(userInputEmail !== \"\"){\n            let reg_email = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,}$/;\n                if(userInputEmail.match(reg_email) == null){\n                    errorString += \"Please enter a valid email address\\n\";\n                    setUserInputEmail(\"\");\n                    validated = false;\n                }\n                else{\n                    fieldsChangedStr += (\"Email Changed to \"+ String(userInputEmail));\n                    // updated_input[0] = \"\";\n                }\n        }\n        if(userInputNumber !== \"\"){\n            let reg_phone = /^[1-9]{3}-[0-9]{3}-[0-9]{4}$/;\n                if(userInputNumber && userInputNumber.match(reg_phone) == null){\n                    errorString += \"Please enter a valid phone number\\n\";\n                    setUserInputNumber(\"\");\n                    validated = false;\n                }\n                else{\n                    fieldsChangedStr += (\"Number Changed to \"+ String(userInputNumber));\n                    // updated_input[1] = \"\";\n                }\n        }\n        if(userInputZip !== \"\"){\n            let reg_zip = /^[0-9]{5}(?:-[0-9]{4})?$/;\n                if(userInputZip && userInputZip.match(reg_zip) == null){\n                    errorString += \"Please enter a valid zip code\\n\";\n                    setUserInputZip(\"\");\n                    validated = false;\n                }\n                else{\n                    fieldsChangedStr += (\"Zip code Changed to \"+ String(userInputZip));\n                    // updated_input[2] = \"\";\n                }\n        }\n        if(userInputPassword !== \"\"){\n            let reg_password = /^[\\S]{6,}$/; \n                if(userInputPassword && userInputPassword.match(reg_password) == null){\n                    errorString += \"Please enter a valid password\\n\";\n                    setUserInputPassword(\"\");\n                    validated = false;\n                }\n                else{\n                    password_checked = true\n                }\n        }\n        if(userInputConfirmPassword !== \"\"){\n                if(userInputConfirmPassword && userInputConfirmPassword !== userInputPassword){\n                    errorString += \"Please make sure your password matches\\n\";\n                    setUserInputConfirmPassword(\"\")\n                    setUserInputPassword(\"\")\n                    validated = false;\n                }\n                else{\n                    fieldsChangedStr += (\"Password Changed to \"+ String(userInputConfirmPassword));\n                    // updated_input[4] = \"\";\n                }\n        }\n\n        // Pass checker -> set new state with these updated inputs\n        if (validated) {\n            console.log(\"pass profile update validation\")\n            // update user's updated information\n            let updated_input = []\n            if(userInputEmail === \"\"){updated_input[0] = currentValue[0]}\n            else{updated_input[0] = userInputEmail}\n            \n            if(userInputNumber === \"\"){updated_input[1] = currentValue[1]}\n            else{updated_input[1] = userInputNumber}\n\n            if(userInputZip === \"\"){updated_input[2] = currentValue[2]}\n            else{updated_input[2] = userInputZip}\n\n            if(userInputPassword === \"\"){updated_input[3] = currentValue[3]}\n            else{updated_input[3] = userInputPassword}\n\n            if(userInputConfirmPassword === \"\"){updated_input[4] = currentValue[4]}\n            else{updated_input[4] = userInputConfirmPassword}\n\n            setCurrentValue(updated_input)\n            setUserInputEmail(\"\")\n            setUserInputNumber(\"\")\n            setUserInputZip(\"\")\n            setUserInputPassword(\"\")\n            setUserInputConfirmPassword(\"\")\n            setStatusMsg(fieldsChangedStr)\n            \n        }\n        else{\n            setUserInputEmail(\"\")\n            setUserInputNumber(\"\")\n            setUserInputZip(\"\")\n            setUserInputPassword(\"\")\n            setUserInputConfirmPassword(\"\")\n            setCurrentValue(currentValue)\n            setStatusMsg(errorString)\n        }\n        \n\n    }\n\n    return (\n        <>\n            <Topbar/>\n            <div className=\"profileWrapper\">\n                <div className=\"profileTop\">\n                    <div className=\"profilePicSection\">\n                        <img className=\"profilePic \"src=\"assets/profile_pic_1.jpg\" alt=\"\" />\n                        <input className=\"uploadPicBtn\" text=\"upload\" type=\"file\"/>\n                    </div>\n                    <span className=\"profileName\">Mario</span>\n\n                    <div class=\"profile-work\">\n                        <p className=\"profile-work-text\">LINKS</p>\n                        <a className=\"profile-work-link\" href=\"https://github.com/Mikerpen22\">Github</a>\n                        <a className=\"profile-work-link\" href=\"https://www.linkedin.com/in/mh-shih\">Linkedin</a>\n                    </div>\n                </div>\n\n                <div className=\"profileMain\">\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">User Name:</span>\n                        <input className=\"displayNameInput inputBox\" type=\"text\" placeholder=\"Unable to change\"/>\n                        <span className=\"displayCurrentValue\">Mario</span>\n                    </div>\n\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">Email Address:</span>\n                        <input className=\"displayEmailInput inputBox\" type=\"email\" value={userInputEmail} onChange={inputEmailHandler} placeholder=\"x@z.ab\"/>\n                        <span className=\"displayCurrentValue\">{currentValue[0]}</span>\n                    </div>\n\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">Tel:</span>\n                        <input className=\"displayNumberInput inputBox\" type=\"tel\"  value={userInputNumber} onChange={inputNumberHandler} placeholder=\"123-123-1234\"/>\n                        <span className=\"displayCurrentValue\">{currentValue[1]}</span>\n                    </div>\n\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">Zip code:</span>\n                        <input className=\"displayZipInput inputBox\" type=\"text\" value={userInputZip} onChange={inputZipHandler} placeholder=\"77665\"/>\n                        <span className=\"displayCurrentValue\">{currentValue[2]}</span>\n                    </div>\n\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">Password:</span>\n                        <input className=\"displayPasswordInput inputBox\" value={userInputPassword} onChange={inputPasswordHandler} type=\"password\"/>\n                        <span className=\"displayCurrentValue\">{currentValue[3]}</span>\n                    </div>\n\n                    <div className=\"inputSection\">\n                        <span className=\"inputPrompt\">Password confirmation:</span>\n                        <input className=\"displayPasswordConfirmInput inputBox\" value={userInputConfirmPassword} onChange={inputPasswordConfirmHandler} type=\"password\"/>\n                        <span className=\"displayCurrentValue\">{currentValue[4]}</span>\n                    </div>\n\n                    <input className=\"profileUpdateButton \"type=\"submit\" value=\"Update\" onClick={inputChecker}/>\n                </div>\n            </div>\n            \n            <div className=\"statusMsg\">{statusMsg}</div>\n        </>\n    )\n}\n\nexport default Profile\n","import Home from \"./pages/home/Home\";\nimport Login from \"./pages/login/Login\";\nimport Profile from \"./pages/profile/Profile\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { useState } from 'react'\n\n\nfunction App() {\n\n  let currUserFromLocalStore = 0\n  if(localStorage.getItem(\"currUser\")){\n    currUserFromLocalStore = localStorage.getItem(\"currUser\")\n  }\n\n  const [currUser, setCurrUser] = useState(parseInt(currUserFromLocalStore))  // Pass it to Login, Home, Profile so I know which user is logged in now\n\n  const updateCurrUser = (userID) => {\n    console.log(`I'm at App.js setting localStorage for userID ${userID}`)\n    console.log(localStorage)\n    localStorage.setItem(\"currUser\", userID)\n    setCurrUser(userID)\n  }\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login currUser={currUser} updateCurrUser={updateCurrUser}/>\n          </Route>\n          <Route exact path=\"/home\">\n            <Home currUser={currUser} updateCurrUser={updateCurrUser}/>\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile currUser={currUser} updateCurrUser={updateCurrUser}/>\n          </Route>\n        </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}