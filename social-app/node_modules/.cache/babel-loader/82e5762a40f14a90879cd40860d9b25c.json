{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Common from'../common/Common';import Post from'../post/Post';import\"./feed.css\";import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Feed=function Feed(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];// Fetch posts from dummy server\nuseEffect(function(){var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var serverPosts,currUserServerPosts,currFriendsId,temp,_currUserServerPosts,friendsIDArr,_currUserServerPosts2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchPosts();case 2:serverPosts=_context.sent;// This is new user that just registers\nif(props.currUser>9){console.log(\"I'm at Feed.js getting posts for new user!\");localStorage.setItem(\"currUser\",props.currUser);currUserServerPosts=serverPosts.filter(function(post){return parseInt(post.userId)===1;});setPosts(currUserServerPosts);}else{console.log(\"I'm at Feed.js getting posts for old user \".concat(props.currUser,\"!\"));// I refresh the page\nif(props.friends.length===20){console.log(\"I refresh the page\");currFriendsId=[];if(localStorage.getItem(\"friends\")){temp=localStorage.getItem(\"friends\").split(',');console.log(temp);temp=temp.map(function(e){return parseInt(e);});currFriendsId.push.apply(currFriendsId,temp);}// TODO: Correctly set props.friends(currently it becomes empty after refresh)\nconsole.log(props.friends);_currUserServerPosts=serverPosts.filter(function(post){return parseInt(post.userId)!==props.currUser&&currFriendsId.includes(parseInt(post.userId));});setPosts(_currUserServerPosts);}else{console.log(\"yi\");console.log(props.friends);friendsIDArr=props.friends.map(function(f){return f.id;});console.log(friendsIDArr);_currUserServerPosts2=serverPosts.filter(function(post){return parseInt(post.userId)!==props.currUser&&friendsIDArr.includes(parseInt(post.userId));});setPosts(_currUserServerPosts2);}}case 4:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();getPosts();},[props.friends]);var fetchPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://jsonplaceholder.typicode.com/posts\");case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:data=_context2.sent;return _context2.abrupt(\"return\",data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchPosts(){return _ref2.apply(this,arguments);};}();var addToPosts=function addToPosts(modifiedPostsArr){setPosts(modifiedPostsArr);};return/*#__PURE__*/_jsx(\"div\",{className:\"feed\",children:/*#__PURE__*/_jsxs(\"div\",{\"data-testid\":\"test-feed-id\",className:\"feedWrapper\",children:[/*#__PURE__*/_jsx(Common,{posts:posts,addToPosts:addToPosts}),posts.map(function(post){return/*#__PURE__*/_jsx(Post,{posts:post},post.id);})]})});};export default Feed;","map":{"version":3,"sources":["/Users/mikey/social-app/src/components/feed/Feed.js"],"names":["React","Common","Post","useState","useEffect","Feed","props","posts","setPosts","getPosts","fetchPosts","serverPosts","currUser","console","log","localStorage","setItem","currUserServerPosts","filter","post","parseInt","userId","friends","length","currFriendsId","getItem","temp","split","map","e","push","apply","includes","friendsIDArr","f","id","fetch","res","json","data","addToPosts","modifiedPostsArr"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Common from '../common/Common'\nimport Post from '../post/Post'\nimport \"./feed.css\"\nimport { useState, useEffect } from 'react'\n\n\nconst Feed = (props) => {\n    const [posts, setPosts] = useState([]) \n    // Fetch posts from dummy server\n    useEffect(() => {\n        const getPosts = async () => {\n            const serverPosts = await fetchPosts()\n            // This is new user that just registers\n            if(props.currUser > 9){\n                console.log(\"I'm at Feed.js getting posts for new user!\")\n                localStorage.setItem(\"currUser\", props.currUser)\n                const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) === 1))\n                setPosts(currUserServerPosts)\n            }\n            else{\n                console.log(`I'm at Feed.js getting posts for old user ${props.currUser}!`)\n\n                // I refresh the page\n                if(props.friends.length === 20){\n                    console.log(\"I refresh the page\")\n                    let currFriendsId = []\n                    if(localStorage.getItem(\"friends\")){\n                        let temp = localStorage.getItem(\"friends\").split(',')\n                        console.log(temp)\n                        temp = temp.map((e)=>(parseInt(e)))\n                        currFriendsId.push.apply(currFriendsId, temp)\n                    }\n                    // TODO: Correctly set props.friends(currently it becomes empty after refresh)\n                    console.log(props.friends)\n                    const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) !== props.currUser && currFriendsId.includes(parseInt(post.userId))))\n                    setPosts(currUserServerPosts)                   \n                }\n                else{\n                    console.log(\"yi\")\n                    console.log(props.friends)\n                    let friendsIDArr = props.friends.map((f) => (f.id))\n                    console.log(friendsIDArr)\n                    const currUserServerPosts = serverPosts.filter((post) => (parseInt(post.userId) !== props.currUser && friendsIDArr.includes(parseInt(post.userId))))\n                    setPosts(currUserServerPosts)        \n                }\n            }\n        }\n        getPosts()\n    },[props.friends])\n    const fetchPosts = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        const data = await res.json()\n        return data\n    }\n    \n    const addToPosts = (modifiedPostsArr) => {\n        setPosts(modifiedPostsArr)\n    }\n\n    return (\n        <div className=\"feed\">\n            <div data-testid=\"test-feed-id\" className=\"feedWrapper\">\n                <Common posts={posts} addToPosts={addToPosts}/>\n                {posts.map( (post) => (\n                   <Post key={post.id} posts={post}/> \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Feed\n"]},"metadata":{},"sourceType":"module"}