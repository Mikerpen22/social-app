{"ast":null,"code":"import _toConsumableArray from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./login.css\";import{useState,useEffect}from\"react\";import React from'react';import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),UsersCredentials=_useState2[0],setUsersCredentials=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];// Fetch users email and password from dummy server\nuseEffect(function(){var getUsersCredentials=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var serverUsersCredentials;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchUsersCrendentials();case 2:serverUsersCredentials=_context.sent;setUsersCredentials(serverUsersCredentials);// console.log(UsersCredentials)\ncase 4:case\"end\":return _context.stop();}}},_callee);}));return function getUsersCredentials(){return _ref.apply(this,arguments);};}();getUsersCredentials();},[]);var fetchUsersCrendentials=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://jsonplaceholder.typicode.com/users\");case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:data=_context2.sent;return _context2.abrupt(\"return\",data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchUsersCrendentials(){return _ref2.apply(this,arguments);};}();var history=useHistory();var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),userMail=_useState6[0],setUserMail=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userPassword=_useState8[0],setUserPassword=_useState8[1];var handleUserMailInput=function handleUserMailInput(e){setUserMail(e.target.value);};var handleUserPasswordInput=function handleUserPasswordInput(e){setUserPassword(e.target.value);};var loginChecker=function loginChecker(){// Perform check on user's input email & password\nvar userCredentialsEmail=[];var userCredentialsPassword=[];userCredentialsEmail=UsersCredentials.map(function(userObj){return userObj.email;});userCredentialsPassword=UsersCredentials.map(function(userObj){return userObj.address.street;});if(userCredentialsEmail.includes(userMail)){if(userCredentialsPassword.includes(userPassword)){// Success then:\n// 1. Set currUser global state passed from App.js -> currUser will be set with his/her userID\nvar currUserID=0;for(var i=0;i<UsersCredentials.length;i++){if(UsersCredentials[i].email==userMail){currUserID=UsersCredentials[i].id;}}props.updateCurrUser(currUserID);console.log(\"user \".concat(currUserID,\" logged in\"));localStorage.setItem(\"currUser\",currUserID);console.log(localStorage);setIsLoggedIn(true);// 2. route to homepage\nvar path=\"/home\";history.push(path);}else{window.alert(\"wrong password!\");setUserPassword(\"\");}}else{window.alert(\"wrong username or password!\");setUserMail(\"\");setUserPassword(\"\");}};var registerHandler=function registerHandler(){// Update my UsersCredentials state\nvar newUserCredential={\"email\":userMail,\"password\":userPassword};var newUserCredentials=[].concat(_toConsumableArray(UsersCredentials),[newUserCredential]);setUsersCredentials(newUserCredentials);// Set current user so we can later choose which posts to display for this user\nvar newUserId=UsersCredentials.length;props.updateCurrUser(newUserId);// Route to homepage after registration\nvar path=\"/home\";history.push(path);};return/*#__PURE__*/_jsx(\"div\",{className:\"login\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginLeft\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"loginLogo\",children:\"Social Appie\"}),/*#__PURE__*/_jsx(\"span\",{className:\"loginDesc\",children:\"Please sign in or sign up.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"loginRight\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginBox\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input1\",type:\"email\",name:\"emailInput\",value:userMail,onChange:handleUserMailInput,placeholder:\"Email address\",className:\"loginInput\"}),/*#__PURE__*/_jsx(\"input\",{id:\"input2\",type:\"Password\",name:\"pwdInput\",value:userPassword,onChange:handleUserPasswordInput,placeholder:\"Password\",className:\"loginInput\"}),/*#__PURE__*/_jsx(\"button\",{\"data-testid\":\"testBtn1\",id:\"loginBtn\",className:\"loginBtn\",onClick:loginChecker,children:\"Log in\"}),/*#__PURE__*/_jsx(\"button\",{id:\"registerBtn\",className:\"loginRegisterBtn\",onClick:registerHandler,children:\"Sign up?\"})]})]})});};export default Login;// export const validateLogin","map":{"version":3,"sources":["/Users/mikey/social-app/src/pages/login/Login.js"],"names":["useState","useEffect","React","useHistory","Login","props","UsersCredentials","setUsersCredentials","isLoggedIn","setIsLoggedIn","getUsersCredentials","fetchUsersCrendentials","serverUsersCredentials","fetch","res","json","data","history","userMail","setUserMail","userPassword","setUserPassword","handleUserMailInput","e","target","value","handleUserPasswordInput","loginChecker","userCredentialsEmail","userCredentialsPassword","map","userObj","email","address","street","includes","currUserID","i","length","id","updateCurrUser","console","log","localStorage","setItem","path","push","window","alert","registerHandler","newUserCredential","newUserCredentials","newUserId"],"mappings":"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","sourcesContent":["import \"./login.css\"\nimport { useState, useEffect } from \"react\"\nimport React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\n\nconst Login = (props) => {\n    const [UsersCredentials, setUsersCredentials] = useState([])\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    // Fetch users email and password from dummy server\n    useEffect(() => {\n        const getUsersCredentials = async () => {\n            const serverUsersCredentials = await fetchUsersCrendentials()\n            setUsersCredentials(serverUsersCredentials)\n            // console.log(UsersCredentials)\n        }\n        getUsersCredentials()\n    }, [])\n    const fetchUsersCrendentials = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n\n\n    const history = useHistory()\n    const [userMail, setUserMail] = useState([])\n    const [userPassword, setUserPassword] = useState([])\n    \n    const handleUserMailInput = (e) => {\n        setUserMail(e.target.value)\n    }\n    const handleUserPasswordInput = (e) => {\n        setUserPassword(e.target.value)\n    }\n    const loginChecker = () => {\n        // Perform check on user's input email & password\n        let userCredentialsEmail = [];\n        let userCredentialsPassword = [];\n        userCredentialsEmail = UsersCredentials.map( userObj => userObj.email );\n        userCredentialsPassword = UsersCredentials.map( userObj => userObj.address.street);\n        if (userCredentialsEmail.includes(userMail)){\n            if(userCredentialsPassword.includes(userPassword)){\n                // Success then:\n                // 1. Set currUser global state passed from App.js -> currUser will be set with his/her userID\n                let currUserID = 0;\n                for(var i = 0; i < UsersCredentials.length; i++){\n                    if(UsersCredentials[i].email == userMail){\n                        currUserID = UsersCredentials[i].id;\n                    }\n                }\n                props.updateCurrUser(currUserID)\n                console.log(`user ${currUserID} logged in`)\n                localStorage.setItem(\"currUser\", currUserID)\n                console.log(localStorage)\n                setIsLoggedIn(true)\n                // 2. route to homepage\n                let path = \"/home\";\n                history.push(path);\n            }\n            else{\n                window.alert(\"wrong password!\")\n                setUserPassword(\"\")\n            }\n        }\n        else{\n            window.alert(\"wrong username or password!\")\n            setUserMail(\"\")\n            setUserPassword(\"\")\n        }\n    }\n\n    const registerHandler = () => {\n        // Update my UsersCredentials state\n        let newUserCredential = {\n            \"email\": userMail,\n            \"password\": userPassword\n        }\n        let newUserCredentials = [...UsersCredentials, newUserCredential];\n        setUsersCredentials(newUserCredentials);\n\n        // Set current user so we can later choose which posts to display for this user\n        let newUserId = UsersCredentials.length;\n        props.updateCurrUser(newUserId);\n\n        // Route to homepage after registration\n        let path = \"/home\";\n        history.push(path);\n    }\n    \n    return (\n        <div className=\"login\">\n            <div className=\"loginWrapper\">\n                <div className=\"loginLeft\">\n                    <h3 className=\"loginLogo\">Social Appie</h3>\n                    <span className=\"loginDesc\">Please sign in or sign up.</span>\n                </div>\n                    \n                <div className=\"loginRight\"></div>\n                    <div className=\"loginBox\">\n                        <input id=\"input1\" type=\"email\" name='emailInput' value={userMail} onChange={handleUserMailInput} placeholder=\"Email address\" className=\"loginInput\"/>\n                        <input id=\"input2\" type=\"Password\" name='pwdInput' value={userPassword} onChange={handleUserPasswordInput} placeholder=\"Password\" className=\"loginInput\"/>\n                        <button data-testid=\"testBtn1\" id=\"loginBtn\" className=\"loginBtn\" onClick={loginChecker}>Log in</button>\n                        <button id='registerBtn' className=\"loginRegisterBtn\" onClick={registerHandler}>Sign up?</button>\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n// export const validateLogin"]},"metadata":{},"sourceType":"module"}