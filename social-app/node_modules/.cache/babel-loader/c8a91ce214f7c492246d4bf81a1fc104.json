{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mikey/social-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Common from'../common/Common';import Post from'../post/Post';import\"./feed.css\";import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Feed=function Feed(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];// Fetch posts from dummy server\nuseEffect(function(){var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var serverPosts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchPosts();case 2:serverPosts=_context.sent;setPosts(serverPosts);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();getPosts();},[]);var fetchPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://jsonplaceholder.typicode.com/posts\");case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:data=_context2.sent;return _context2.abrupt(\"return\",data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchPosts(){return _ref2.apply(this,arguments);};}();var addToPosts=function addToPosts(modifiedPostsArr){setPosts(modifiedPostsArr);};return/*#__PURE__*/_jsx(\"div\",{className:\"feed\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"feedWrapper\",children:[/*#__PURE__*/_jsx(Common,{posts:posts,addToPosts:addToPosts}),posts.map(function(post){return/*#__PURE__*/_jsx(Post,{posts:post},post.id);})]})});};export default Feed;","map":{"version":3,"sources":["/Users/mikey/social-app/src/components/feed/Feed.js"],"names":["React","Common","Post","useState","useEffect","Feed","posts","setPosts","getPosts","fetchPosts","serverPosts","fetch","res","json","data","addToPosts","modifiedPostsArr","map","post","id"],"mappings":"uaAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAO,YAAP,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,C,wFAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACA;AACAH,SAAS,CAAC,UAAM,CACZ,GAAMI,CAAAA,QAAQ,0FAAG,yKACaC,CAAAA,UAAU,EADvB,QACPC,WADO,eAEbH,QAAQ,CAACG,WAAD,CAAR,CAFa,sDAAH,kBAARF,CAAAA,QAAQ,0CAAd,CAIAA,QAAQ,GACX,CANQ,CAMP,EANO,CAAT,CAOA,GAAMC,CAAAA,UAAU,2FAAG,4KACGE,CAAAA,KAAK,CAAC,4CAAD,CADR,QACTC,GADS,uCAEIA,CAAAA,GAAG,CAACC,IAAJ,EAFJ,QAETC,IAFS,iDAGRA,IAHQ,0DAAH,kBAAVL,CAAAA,UAAU,2CAAhB,CAMA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,gBAAD,CAAsB,CACrCT,QAAQ,CAACS,gBAAD,CAAR,CACH,CAFD,CAIA,mBACI,YAAK,SAAS,CAAC,MAAf,uBACI,aAAK,SAAS,CAAC,aAAf,wBACI,KAAC,MAAD,EAAQ,KAAK,CAAEV,KAAf,CAAsB,UAAU,CAAES,UAAlC,EADJ,CAEKT,KAAK,CAACW,GAAN,CAAW,SAACC,IAAD,qBACT,KAAC,IAAD,EAAoB,KAAK,CAAEA,IAA3B,EAAWA,IAAI,CAACC,EAAhB,CADS,EAAX,CAFL,GADJ,EADJ,CAUH,CA9BD,CAgCA,cAAed,CAAAA,IAAf","sourcesContent":["import React from 'react'\nimport Common from '../common/Common'\nimport Post from '../post/Post'\nimport \"./feed.css\"\nimport { useState, useEffect } from 'react'\n\n\nconst Feed = () => {\n    const [posts, setPosts] = useState([]) \n    // Fetch posts from dummy server\n    useEffect(() => {\n        const getPosts = async () => {\n            const serverPosts = await fetchPosts()\n            setPosts(serverPosts)\n        }\n        getPosts()\n    },[])\n    const fetchPosts = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        const data = await res.json()\n        return data\n    }\n    \n    const addToPosts = (modifiedPostsArr) => {\n        setPosts(modifiedPostsArr)\n    }\n\n    return (\n        <div className=\"feed\">\n            <div className=\"feedWrapper\">\n                <Common posts={posts} addToPosts={addToPosts}/>\n                {posts.map( (post) => (\n                   <Post key={post.id} posts={post}/> \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Feed\n"]},"metadata":{},"sourceType":"module"}