{"ast":null,"code":"var _jsxFileName = \"/Users/mikey/social-app/src/pages/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport \"./login.css\";\nimport { useState, useEffect } from \"react\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [UsersCredentials, setUsersCredentials] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Fetch users username and password from dummy server\n\n  useEffect(() => {\n    const getUsersCredentials = async () => {\n      const serverUsersCredentials = await fetchUsersCrendentials();\n      setUsersCredentials(serverUsersCredentials); // console.log(UsersCredentials)\n    };\n\n    getUsersCredentials();\n  }, []);\n\n  const fetchUsersCrendentials = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await res.json();\n    return data;\n  };\n\n  const history = useHistory();\n  const [username, setUserName] = useState([]);\n  const [userPassword, setUserPassword] = useState([]);\n\n  const handleUserMailInput = e => {\n    setUserName(e.target.value);\n  };\n\n  const handleUserPasswordInput = e => {\n    setUserPassword(e.target.value);\n  };\n\n  const loginChecker = () => {\n    // Perform check on user's input username & password\n    let userCredentialsUsername = [];\n    let userCredentialsPassword = [];\n    userCredentialsUsername = UsersCredentials.map(userObj => userObj.username);\n    userCredentialsPassword = UsersCredentials.map(userObj => userObj.address.street);\n\n    if (userCredentialsUsername.includes(username)) {\n      if (userCredentialsPassword.includes(userPassword)) {\n        // Success then:\n        // 1. Set currUser global state passed from App.js -> currUser will be set with his/her userID\n        let currUserID = 0;\n\n        for (var i = 0; i < UsersCredentials.length; i++) {\n          if (UsersCredentials[i].username == username) {\n            currUserID = UsersCredentials[i].id;\n          }\n        }\n\n        props.updateCurrUser(currUserID);\n        console.log(`user ${currUserID} logged in`);\n        localStorage.setItem(\"currUser\", currUserID);\n        console.log(localStorage);\n        setIsLoggedIn(true); // 2. route to homepage\n\n        let path = \"/home\";\n        history.push(path);\n      } else {\n        window.alert(\"wrong password!\");\n        setUserPassword(\"\");\n      }\n    } else {\n      window.alert(\"wrong username or password!\");\n      setUserName(\"\");\n      setUserPassword(\"\");\n    }\n  };\n\n  const registerHandler = () => {\n    // Update my UsersCredentials state\n    let newUserCredential = {\n      \"username\": username,\n      \"password\": userPassword\n    };\n    let newUserCredentials = [...UsersCredentials, newUserCredential];\n    setUsersCredentials(newUserCredentials); // Set current user so we can later choose which posts to display for this user\n\n    let newUserId = UsersCredentials.length;\n    props.updateCurrUser(newUserId); // Route to homepage after registration\n\n    let path = \"/home\";\n    history.push(path);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"loginLogo\",\n          children: \"Social Appie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loginDesc\",\n          children: \"Please sign in or sign up.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input1\",\n          type: \"email\",\n          name: \"usernameInput\",\n          value: username,\n          onChange: handleUserMailInput,\n          placeholder: \"Username\",\n          className: \"loginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input2\",\n          type: \"Password\",\n          name: \"pwdInput\",\n          value: userPassword,\n          onChange: handleUserPasswordInput,\n          placeholder: \"Password\",\n          className: \"loginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"testBtn1\",\n          id: \"loginBtn\",\n          className: \"loginBtn\",\n          onClick: loginChecker,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input1\",\n          type: \"email\",\n          name: \"usernameInput\",\n          value: username,\n          onChange: handleUserMailInput,\n          placeholder: \"Username\",\n          className: \"loginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input2\",\n          type: \"Password\",\n          name: \"pwdInput\",\n          value: userPassword,\n          onChange: handleUserPasswordInput,\n          placeholder: \"Password\",\n          className: \"loginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"registerBtn\",\n          className: \"loginRegisterBtn\",\n          onClick: registerHandler,\n          children: \"Sign up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"J/f+Wj0GMX/rj/hR69rw8gC4w/M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login; // export const validateLogin\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mikey/social-app/src/pages/login/Login.js"],"names":["useState","useEffect","React","useHistory","Login","props","UsersCredentials","setUsersCredentials","isLoggedIn","setIsLoggedIn","getUsersCredentials","serverUsersCredentials","fetchUsersCrendentials","res","fetch","data","json","history","username","setUserName","userPassword","setUserPassword","handleUserMailInput","e","target","value","handleUserPasswordInput","loginChecker","userCredentialsUsername","userCredentialsPassword","map","userObj","address","street","includes","currUserID","i","length","id","updateCurrUser","console","log","localStorage","setItem","path","push","window","alert","registerHandler","newUserCredential","newUserCredentials","newUserId"],"mappings":"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","sourcesContent":["import \"./login.css\"\nimport { useState, useEffect } from \"react\"\nimport React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\n\nconst Login = (props) => {\n    const [UsersCredentials, setUsersCredentials] = useState([])\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    // Fetch users username and password from dummy server\n    useEffect(() => {\n        const getUsersCredentials = async () => {\n            const serverUsersCredentials = await fetchUsersCrendentials()\n            setUsersCredentials(serverUsersCredentials)\n            // console.log(UsersCredentials)\n        }\n        getUsersCredentials()\n    }, [])\n    const fetchUsersCrendentials = async() => {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const data = await res.json()\n        return data\n    }\n\n\n    const history = useHistory()\n    const [username, setUserName] = useState([])\n    const [userPassword, setUserPassword] = useState([])\n    \n    const handleUserMailInput = (e) => {\n        setUserName(e.target.value)\n    }\n    const handleUserPasswordInput = (e) => {\n        setUserPassword(e.target.value)\n    }\n    const loginChecker = () => {\n        // Perform check on user's input username & password\n        let userCredentialsUsername = [];\n        let userCredentialsPassword = [];\n        userCredentialsUsername = UsersCredentials.map( userObj => userObj.username );\n        userCredentialsPassword = UsersCredentials.map( userObj => userObj.address.street);\n        if (userCredentialsUsername.includes(username)){\n            if(userCredentialsPassword.includes(userPassword)){\n                // Success then:\n                // 1. Set currUser global state passed from App.js -> currUser will be set with his/her userID\n                let currUserID = 0;\n                for(var i = 0; i < UsersCredentials.length; i++){\n                    if(UsersCredentials[i].username == username){\n                        currUserID = UsersCredentials[i].id;\n                    }\n                }\n                props.updateCurrUser(currUserID)\n                console.log(`user ${currUserID} logged in`)\n                localStorage.setItem(\"currUser\", currUserID)\n                console.log(localStorage)\n                setIsLoggedIn(true)\n                // 2. route to homepage\n                let path = \"/home\";\n                history.push(path);\n            }\n            else{\n                window.alert(\"wrong password!\")\n                setUserPassword(\"\")\n            }\n        }\n        else{\n            window.alert(\"wrong username or password!\")\n            setUserName(\"\")\n            setUserPassword(\"\")\n        }\n    }\n\n    const registerHandler = () => {\n        // Update my UsersCredentials state\n        let newUserCredential = {\n            \"username\": username,\n            \"password\": userPassword\n        }\n        let newUserCredentials = [...UsersCredentials, newUserCredential];\n        setUsersCredentials(newUserCredentials);\n\n        // Set current user so we can later choose which posts to display for this user\n        let newUserId = UsersCredentials.length;\n        props.updateCurrUser(newUserId);\n\n        // Route to homepage after registration\n        let path = \"/home\";\n        history.push(path);\n    }\n    \n    return (\n        <div className=\"login\">\n            <div className=\"loginWrapper\">\n                <div className=\"loginLeft\">\n                    <h3 className=\"loginLogo\">Social Appie</h3>\n                    <span className=\"loginDesc\">Please sign in or sign up.</span>\n                </div>\n                    \n                <div className=\"loginRight\"></div>\n                    <div className=\"loginBox\">\n                        <input id=\"input1\" type=\"email\" name='usernameInput' value={username} onChange={handleUserMailInput} placeholder=\"Username\" className=\"loginInput\"/>\n                        <input id=\"input2\" type=\"Password\" name='pwdInput' value={userPassword} onChange={handleUserPasswordInput} placeholder=\"Password\" className=\"loginInput\"/>\n                        <button data-testid=\"testBtn1\" id=\"loginBtn\" className=\"loginBtn\" onClick={loginChecker}>Log in</button>\n\n                        <input id=\"input1\" type=\"email\" name='usernameInput' value={username} onChange={handleUserMailInput} placeholder=\"Username\" className=\"loginInput\"/>\n                        <input id=\"input2\" type=\"Password\" name='pwdInput' value={userPassword} onChange={handleUserPasswordInput} placeholder=\"Password\" className=\"loginInput\"/>\n                        <button id='registerBtn' className=\"loginRegisterBtn\" onClick={registerHandler}>Sign up?</button>\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n// export const validateLogin"]},"metadata":{},"sourceType":"module"}